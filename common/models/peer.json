{
  "name": "peer",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "caseSensitiveEmail": true
  },
  "hidden": [
    "password",
    "verificationToken"
  ],
  "properties": {
    "id": {
      "type": "string",
      "required": true
    },
    "username": {
      "type": "string"
    },
    "password": {
      "type": "string",
      "required": true
    },
    "email": {
      "type": "string"
    },
    "phone": {
      "type": "number"
    },
    "emailVerified": {
      "type": "boolean"
    },
    "verificationToken": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "userTokens": {
      "type": "hasMany",
      "model": "UserToken",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "identities": {
      "type": "hasMany",
      "model": "userIdentity",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "credentials": {
      "type": "hasMany",
      "model": "userCredential",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "topics": {
      "type": "hasMany",
      "model": "topic",
      "foreignKey": "sourceId",
      "through": "peer_has_topic",
      "keyThrough": "targetId"
    },
    "communities": {
      "type": "hasMany",
      "model": "community",
      "foreignKey": "targetId",
      "through": "community_has_member",
      "keyThrough": "sourceId"
    },
    "collections": {
      "type": "hasMany",
      "model": "collection",
      "foreignKey": "targetId",
      "through": "collection_has_participant",
      "keyThrough": "sourceId"
    },
    "following": {
      "type": "hasMany",
      "model": "peer",
      "foreignKey": "sourceId",
      "through": "peer_has_following",
      "keyThrough": "targetId"
    },
    "profile": {
      "type": "hasMany",
      "model": "profile",
      "foreignKey": "sourceId",
      "through": "peer_has_profile",
      "keyThrough": "targetId"
    },
    "comments": {
      "type": "hasMany",
      "model": "comment",
      "foreignKey": "sourceId",
      "through": "comment_givenby_peer",
      "keyThrough": "targetId"
    }
  },
  "acls": [],
  "methods": {}
}
